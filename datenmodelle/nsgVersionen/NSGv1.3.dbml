////////////////////////////////////////////////////////////
// NSG-Datenmodell v1.3 (DBML)
// - Einarbeitung der MUSS-Änderungen aus der Stichprobenprüfung
// - Klarere Kategorisierung der Aktivitäten (Freizeit vs. Eingriffe)
// - Generische, maschinenlesbare Bedingungen (Operator/Wert/Einheit)
// - Zonen-Gruppierung (für Formulierungen wie "…und seine Nebengewässer")
////////////////////////////////////////////////////////////

// ---------------- ENUMS ----------------

Enum dokument_typ_enum {
  verordnung
  aenderungsverordnung
  ergaenzung
  befahrensverordnung
  polizeiverordnung
  berichtigung
  sonstige_verordnung
}

Enum dokument_status_enum {
  in_kraft
  aufgehoben
  unbekannt
}

Enum ausnahme_art_enum {
  genehmigung
  befreiung
  landwirtschaft
  forstwirtschaft
  jagd
  fischerei
  unterhaltung_infrastruktur
  telekommunikation
  energieversorgung
  verkehrssicherung_gefahrenabwehr
  informationstafeln_besucherlenkung
  invasive_arten_neobiota
  wissenschaft_pflege_entwicklung
  sonstiges
}

// Zonentypen (inkl. bereits eingeführter neuer Typ)
Enum zone_typ_enum {
  gesamtgebiet
  uferzone
  altarm
  buhnenfeld
  gewasserflaeche
  schutzstreifen
  waldabteilung
  wiese_acker
  weg_trasse
  ruhezone
  steinbrueche_sandgruben_erdaufschluesse
  sonstiges
}

// Bedingungstypen
Enum bedingung_typ_enum {
  jahreszeit
  datumspanne
  tageszeit
  wochentag
  wetter
  abstand_m
  menge_limit
  wegepflicht
  zonenbezug
  geschwindigkeit
  artenschutz_schutzzeit
  motor_leistung_kw
  fahrzeug_laenge_m
  personen_max
  feiertag_event      // NEU (Nice-to-have, jetzt umgesetzt)
  sonstiges
}

Enum jahreszeit_enum {
  fruehling
  sommer
  herbst
  winter
}

Enum tageszeit_enum {
  tag
  nacht
  daemmerung
}

Enum wetterbedingung_enum {
  schnee
  eis
  regen
  naesse
  nebel
  sonne
  trockenheit
  sturm
}

Enum ort_enum {
  gesamte_flaeche_des_gebietes
  oeffentlich_gewidmete_strassen_plaetze
  ausgewiesene_wege_plaetze
  unbefestigte_land_und_forstwirtschaftliche_wege
  pfade
  gewasserflaeche
  uferbereich
}

Enum erlaubnis_enum {
  erlaubt
  verboten
  nur_mit_behoerdlicher_erlaubnis_erlaubt
  nur_mit_grundbesitzererlaubnis_erlaubt
  nicht_empfohlen
}

// Aktivitätskategorien (für saubere Trennung Freizeit vs. Eingriffe)
Enum kategorie_enum {
  bergaktivitaeten
  reitaktivitaeten
  radsportaktivitaeten
  motorisierte_aktivitaeten
  laufaktivitaeten
  aufenthaltsaktivitaeten
  generelles_verhalten
  luftaktivitaeten
  schneeaktivitaeten
  urbane_aktivitaeten
  wasseraktivitaeten
  betretungsverhalten
  nutzungs_eingriffs_handlungen
}

// Vergleichsoperatoren für numerische/quantifizierbare Bedingungen
Enum operator_enum {
  lt
  lte
  eq
  gte
  gt
  neq
  approx
  within
}

// Einheiten & Bezugsgrößen (generisch für Bedingungen)
Enum einheit_enum {
  m
  km
  ha
  km_h
  kw
  personen
  stueck
  kg
  kg_ha
  g_m2
}

Enum bezugsflaeche_enum {
  pro_ha
  pro_betrieb
  beidseits
  im_gebiet
  in_zone
}

// Stoffe/Parameter (für Menge-Limits etc.)
Enum stoff_enum {
  stickstoff
  phosphat
  kalium
  duenger_allgemein
  pestizid_biozid
}

// Aktivitätsliste (erweitert + geordnet; NEU markiert)
Enum aktivitaet_enum {
  // ---------------- Freizeit/Verhalten ----------------
  klettern
  eisklettern
  base_jumping
  reiten
  bespannte_fahrzeuge
  radfahren
  kraftfahrzeug
  camping_fahrzeug_anhaenger
  lagern_biwakieren
  feuer
  zelten
  pflanzen_sammeln
  pilze_sammeln
  mineralien_fossilien_sammeln
  fotografieren_filmen
  laerm_tonband_abspielgeraete
  toilettengang
  abfall_entsorgen
  hunde
  hunde_ohne_leine
  ballonfahren
  drohnen_flugmodelle
  panoramafluege
  paraglider
  segelflieger
  ultraleichtflieger
  rodeln_schlitten
  schneeschuhwandern
  ski_und_snowboardfahren
  skilanglauf
  skitouren
  angeln
  baden
  baden_von_tieren
  tauchen
  nutzung_von_schwimmhilfe
  wasserfahrzeuge_ohne_motor
  wasserfahrzeuge_motorisiert
  betreten_des_gebietes
  betreten_abseits_der_wege
  tiere_fuettern
  rauchen
  luftsport_starten_landen
  wintersport
  wassersport
  modellflug_drohnen_betreiben        // RE-klassifiziert: Freizeit/Luft
  modellfahrzeuge_betreiben            // RE-klassifiziert: Freizeit (motorisiert)
  modellschiffe_betreiben              // RE-klassifiziert: Freizeit/Wasser

  // ---------------- NSG-spezifische Eingriffe/Anlagen ----------------
  bauliche_anlagen_errichten_oder_erweitern
  leitungen_verlegen_ueber_unter_erde
  einfriedungen_errichten_oder_erweitern
  materiallagerplaetze_schrottplaetze_anlegen
  abfall_ablegen_verunreinigen
  bodanfassenengestalt_aendern_abgraben_auffuellen_sprengen_bohren
  gewaesser_herstellen_beseitigen_umgestalten_ufer_aendern
  eingriff_in_den_wasserhaushalt      // NEU (eigenständiger Tatbestand)
  aufforstung_erstmalig
  waldroden
  umwandlung_dauergruenland
  duenger_ausbringen
  pflanzenbehandlungsmittel_chemische_mittel_verwenden
  nichtheimische_arten_einbringen
  tiernachstellung_fang_toetung_brutstaetten_stoeren
  jagd_ausuebung
  fischereiliche_nutzung_fischbesatz
  reiten_ausserhalb_ausgewiesener_wege
  fahren_parken_ausserhalb_oefentlich_gewidmeter_wege
  bild_oder_schrifttafeln_anbringen
  anlegestellen_anglerstege_errichten
  segeln_surfen_befahren_ohne_motor
  tauchen_mit_ausruestung
  intensive_weidewirtschaft
  wildacker_anlegen_oder_unterhalten
  wildfuetterungsstellen_anlegen_oder_unterhalten
  strassen_und_wege_neu_oder_ausbauen
  weihnachtsbaumkultur_anlegen
  baumschulkulturen_anlegen
  sonderkulturen_anlegen
  eissport_auf_gewaessern
  geocaching
  massensportveranstaltung_durchfuehren
  geophysikalische_untersuchungen
  wirtschaftliche_oder_gewerbliche_taetigkeit_ausueben
  tiere_aussetzen_ansiedeln
  pflanzen_oder_pflanzenteile_einbringen
  gaerten_anlegen_oder_unterhalten     // NEU
  vieh_traenken_im_gewaesser           // NEU
  furten_anlegen                        // NEU
}


// ---------------- KERN: NSG & Recht ----------------

Table schutzgebiet {
  id               int       [pk, increment]
  uuid             uuid      [unique, not null]  // z.B. NSG-7100-025
  kennung          text
  name             text
  kreis            text
  gemeinden_text   text
  flaeche_ha       decimal(10,2)
  wfs_url          text
  gml_id           text
  created_at       timestamp
  updated_at       timestamp

  indexes {
    (uuid) [unique]
  }
}

Table behoerde {
  id         int    [pk, increment]
  name       text
  ebene      text
  ort        text
}

Table dokument {
  id                   int                 [pk, increment]
  schutzgebiet_id      int                 [not null, ref: > schutzgebiet.id]
  typ                  dokument_typ_enum   [not null]
  status               dokument_status_enum
  titel                text
  datum                date
  gueltig_ab           date
  gueltig_bis          date
  aktenzeichen         text
  amtsblatt            text
  rechtsgrundlage      text
  pdf_quelle           text
  seiten_anzahl        int
  ersetzt_dokument_id  int                 [ref: > dokument.id]
  ist_fehlanzeige      boolean
  created_at           timestamp
  updated_at           timestamp
}

Table dokument_behoerde {
  dokument_id  int  [ref: > dokument.id]
  behoerde_id  int  [ref: > behoerde.id]
  rolle        text

  indexes {
    (dokument_id, behoerde_id, rolle) [pk]
  }
}

Table paragraf {
  id            int    [pk, increment]
  dokument_id   int    [not null, ref: > dokument.id]
  nummer        text   // z.B. "§ 4"
  rubrum        text   // "Verbote" | "Ausnahmen" | "OWi" …
  text          text
  sort_index    int
  created_at    timestamp
  updated_at    timestamp

  indexes {
    (dokument_id, nummer) [unique]
  }
}

Table anhang {
  id             int   [pk, increment]
  dokument_id    int   [not null, ref: > dokument.id]
  bezeichnung    text  // z.B. "Anlage 1 – Karte"
  seiten_hinweis text
  beschreibung   text
}


// ---------------- Zonen ----------------

Table zone {
  id               int           [pk, increment]
  schutzgebiet_id  int           [not null, ref: > schutzgebiet.id]
  typ              zone_typ_enum [not null]
  name             text
  beschreibung     text
  quelle           text
  created_at       timestamp
  updated_at       timestamp
}

// Gruppierung von Zonen ("… und seine Nebengewässer" etc.)
Table zone_gruppe {
  id               int   [pk, increment]
  schutzgebiet_id  int   [not null, ref: > schutzgebiet.id]
  name             text  // z.B. "Enterbach + Nebengewässer"
  beschreibung     text
  created_at       timestamp
  updated_at       timestamp
}

Table zone_zone_gruppe {
  zone_id         int  [not null, ref: > zone.id]
  zone_gruppe_id  int  [not null, ref: > zone_gruppe.id]

  indexes {
    (zone_id, zone_gruppe_id) [pk]
  }
}


// ---------------- Aktivitäten/Kataloge ----------------

Table aktivitaetskategorie {
  id         int              [pk, increment]
  code       int
  kategorie  kategorie_enum   [not null]
}

Table aktivitaet {
  id            int              [pk, increment]
  code          int
  kategorie_id  int              [ref: > aktivitaetskategorie.id]
  aktivitaet    aktivitaet_enum  [not null]

  Note: 'Reklassifizierung: modellflug_drohnen_betreiben → luftaktivitaeten; modellfahrzeuge_betreiben → motorisierte_aktivitaeten; modellschiffe_betreiben → wasseraktivitaeten.'
}

Table aktivitaetsort {
  id    int       [pk, increment]
  code  int
  ort   ort_enum  [not null]
}

Table aktivitaetserlaubnis {
  id        int             [pk, increment]
  code      int
  erlaubnis erlaubnis_enum  [not null]
}


// ---------------- Regeln ----------------

Table regel {
  id                 int                [pk, increment]
  schutzgebiet_id    int                [not null, ref: > schutzgebiet.id]
  dokument_id        int                [ref: > dokument.id]
  paragraf_id        int                [ref: > paragraf.id]   // Belegstelle
  aktivitaet_id      int                [not null, ref: > aktivitaet.id]
  ort_id             int                [not null, ref: > aktivitaetsort.id]
  erlaubnis_id       int                [not null, ref: > aktivitaetserlaubnis.id]
  zone_id            int                [ref: > zone.id]       // optional: Regel gilt in Zone

  // häufige ("leichte") Bedingungen – Convenience-Felder
  jahreszeit         jahreszeit_enum
  saison_beginn      date
  saison_ende        date
  tageszeit          tageszeit_enum
  tageszeit_beginn   time
  tageszeit_ende     time
  wetterbedingung    wetterbedingung_enum
  min_weg_breite     decimal(5,2)

  kommentar          text
  user_id            int                // optional [ref: > user.id]
  created_at         timestamp
  updated_at         timestamp
}

Table regel_bedingung {
  id             int                 [pk, increment]
  regel_id       int                 [not null, ref: > regel.id]
  typ            bedingung_typ_enum  [not null]

  // --- Generische, maschinenlesbare Parameter ---
  vergleich      operator_enum       // <, <=, =, >=, >, !=, ~, within
  value_num      decimal(12,3)
  value_num2     decimal(12,3)       // optional (z. B. Spannen)
  einheit        einheit_enum
  bezugsflaeche  bezugsflaeche_enum
  stoff          stoff_enum

  // Zeit-/Datumsbezug
  date_from      date
  date_to        date
  time_from      time
  time_to        time

  // Raum-/Zonenbezug
  zone_id        int                 [ref: > zone.id]
  zone_gruppe_id int                 [ref: > zone_gruppe.id]

  // Ereignisse (Feiertag/Fest) – optional
  event_name     text                // z. B. "Christi Himmelfahrt"

  bemerkung      text                // Normalisierungshinweise
  created_at     timestamp
  updated_at     timestamp
}

Table regel_icon {
  regel_id  int [ref: > regel.id]
  icon_id   int [ref: > icon.id]

  indexes {
    (regel_id, icon_id) [pk]
  }
}

Table icon {
  id     int    [pk, increment]
  name   text   [not null]
  datei  text
}

Table user {
  id            int    [pk, increment]
  organisation  text
  homepage      text
  adresse       text
  email         text
}
